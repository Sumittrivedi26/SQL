use database snowflake_1
select * from SHOPPING_HISTORY1
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES ('pen', 10 , 20);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('pencil', 10 , 5);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('sketchpen', 10 , 10);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('rubber', 5 , 5);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('sharpner', 5 , 5);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('scale', 3 , 5);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('stencil', 1 , 20);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('glitter', 4 , 10);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('fevicol', 2 , 15);
INSERT INTO SHOPPING_HISTORY1 (PRODUCTS, QUANTITY , unit_price) VALUES('tape',1 , 20);

SELECT * FROM SHOPPING_HISTORY1


## TASK1####
ALTER TABLE SHOPPING_HISTORY1
ADD TOTAL_PRICE INTEGER ;
UPDATE SHOPPING_HISTORY1 SET TOTAL_PRICE = QUANTITY * UNIT_PRICE

SELECT * FROM SHOPPING_HISTORY1

SELECT PRODUCTS, TOTAL_PRICE FROM SHOPPING_HISTORY1


### TASK 2###

CREATE TABLE "SNOWFLAKE_1"."PUBLIC"."PHONES" ("NAME" VARCHAR (50) NOT NULL UNIQUE, "PHONENUMBER" INTEGER NOT NULL UNIQUE);

CREATE TABLE "SNOWFLAKE_1"."PUBLIC"."CALLS" ("ID" INTEGER NOT NULL, "CALLER" INTEGER NOT NULL, "CALLEE" INTEGER NOT NULL, "DURATION" INTEGER NOT NULL, UNIQUE(ID));

INSERT INTO PHONES (NAME, PHONENUMBER) VALUES ('JACK', 1234), ('LENA', 3333), ('MARK', 9999),('ANNA', 7582),('JOHN', 6536),('ADDISON', 4315),('KATE', 8003),
('GINNY',9831);
DROP TABLE PHONES
SELECT * FROM PHONES

INSERT INTO CALLS (ID, CALLER, CALLEE,DURATION) VALUES
(25, 1234, 7582, 8), (7, 9999, 7582, 1), (18, 9999, 3333, 4) , (2, 7582, 3333, 3), (3, 3333, 1234,1), (21, 3333, 1234, 1), (65,8003, 9831,7), (100, 9831, 8003, 3),
(145, 4315, 9831,18);

SELECT * FROM CALLS

SELECT NAME FROM(
SELECT P.NAME, SUM(C.DURATION) AS TOTAL_DURATION FROM PHONES AS P JOIN CALLS AS C WHERE P.PHONENUMBER IN (C.CALLER, C.CALLEE)
GROUP BY P.NAME HAVING TOTAL_DURATION >=10 ORDER BY P.NAME)

##-----TAKE 3----###3

SELECT * FROM TRANSACTIONS
INSERT INTO TRANSACTIONS (AMOUNT, DATE) VALUES (1000, '2020-01-06'),(-10, '2020-01-14'),(-75, '2020-01-20'),(-5, '2020-01-25'),
(-4, '2020-01-29'),(2000, '2020-03-10'),
(-75, '2020-03-12'),(-20, '2020-03-15'),(40, '2020-03-15'),(-50, '2020-03-17'),(200, '2020-10-10'),(-200, '2020-10-10');

SELECT * FROM TRANSACTIONS


WITH CTE AS
(SELECT SUM(AMOUNT) AS TOTAL_AMOUNT , COUNT(AMOUNT) AS NO_OF_TRANSACTIONS FROM TRANSACTIONS
WHERE AMOUNT< 0
 GROUP BY MONTH(DATE)
 HAVING TOTAL_AMOUNT <=-100 AND NO_OF_TRANSACTIONS >= 3)
 SELECT SUM(AMOUNT) - (5*(12-(SELECT COUNT(*) FROM CTE ))) AS BALANCE  FROM TRANSACTIONS
