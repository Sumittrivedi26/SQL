USE OLYMPICS

SELECT * FROM OLYMPICS_HISTORY

SELECT * FROM OLYMPICS_NOC_REGION

--HOW MANY ILYMPICS GAMES HAVE BEEN HELD?

SELECT COUNT(DISTINCT(GAMES)) FROM OLYMPICS_HISTORY


--LIST DOWN ALL THE OLYMPIC GAMES HELD SO FAR?

SELECT DISTINCT(GAMES), YEAR, SEASON, CITY FROM OLYMPICS_HISTORY ORDER BY YEAR


--MENTION THE TOTAL NUMBER OF NATIONS WHO PARTICIPATED IN OLYMPICS GAMES?

SELECT GAMES, COUNT(DISTINCT(NOC)) AS TOTAL_COUNTRIES FROM OLYMPICS_HISTORY GROUP BY GAMES ORDER BY GAMES



----WHICH YEAR  YOU SAW THE HIGHEST AND THE LOWEST NUMBER OF COUNTRIES PARTICIPATING?

SELECT  MIN(TOTAL_COUNTRIES), MAX(TOTAL_COUNTRIES) FROM OLYMPICS_HISTORY AS O JOIN 
(SELECT GAMES, COUNT(DISTINCT(NOC)) AS TOTAL_COUNTRIES FROM OLYMPICS_HISTORY GROUP BY GAMES ORDER BY GAMES) AS G


 

---WHICH NATION HAS PARTICIPATED IN ALL THE OLYMPICS GAME


WITH TOT_GAMES AS 
      (SELECT COUNT(DISTINCT(GAMES)) AS TOTAL_GAMES FROM OLYMPICS_HISTORY),
     COUNTRIES AS
     (SELECT GAMES, NR.REGION AS COUNTRY FROM OLYMPICS_HISTORY AS OH JOIN OLYMPICS_NOC_REGION AS NR ON NR.NOC = OH.NOC
      GROUP BY GAMES, NR.REGION),
     COUNTRIES_PARTICIPATED AS 
     (SELECT COUNTRY , COUNT(COUNTRY) AS TOTAL_PARTICIPATED
     FROM COUNTRIES
     GROUP BY COUNTRY)
     SELECT CP.* FROM COUNTRIES_PARTICIPATED AS CP
     JOIN TOT_GAMES AS TG ON TG.TOTAL_GAMES = CP.TOTAL_PARTICIPATED
     ORDER BY 1
     
     
--- Identify the sport which was played in all summer olympics.     

SELECT * FROM OLYMPICS_HISTORY


WITH T1 AS (
            SELECT COUNT (DISTINCT (GAMES)) AS TOTAL_NO_OF_GAMES FROM OLYMPICS_HISTORY
            WHERE SEASON = 'Summer' order by GAMES),
T2 AS (
            SELECT DISTINCT (SPORT), GAMES FROM OLYMPICS_HISTORY
            WHERE SEASON = 'Summer' order by GAMES ),
T3 AS (
            SELECT SPORT,COUNT(GAMES) AS NO_OF_GAMES FROM T2
            GROUP BY SPORT)   
SELECT * FROM T3 JOIN T1 ON  T3.NO_OF_GAMES = T1.TOTAL_NO_OF_GAMES


--Which Sports were just played only once in the olympics.

WITH T1 AS (
            SELECT COUNT (DISTINCT (GAMES)) AS TOTAL_NO_OF_GAMES FROM OLYMPICS_HISTORY
             order by GAMES),
T2 AS (
            SELECT DISTINCT (SPORT), GAMES FROM OLYMPICS_HISTORY
            order by GAMES ),
T3 AS (
            SELECT SPORT,COUNT(GAMES) AS NO_OF_GAMES FROM T2
            GROUP BY SPORT)   
SELECT * FROM T3 WHERE  T3.NO_OF_GAMES = 1 ORDER BY SPORT


---Fetch the total no of sports played in each olympic games.


SELECT COUNT(DISTINCT (SPORT)) AS NO_OF_SPORTS, GAMES FROM OLYMPICS_HISTORY GROUP BY GAMES
            order by NO_OF_SPORTS DESC

--Fetch oldest athletes to win a gold medal

SELECT * FROM OLYMPICS_HISTORY

WITH TEMP AS (
            SELECT NAME, SEX, CAST(CASE WHEN AGE = 'NA' THEN 0 ELSE AGE END AS INT) AS AGE,
            TEAM, GAMES, CITY, SPORT, MEDAL FROM OLYMPICS_HISTORY
),
RANKING AS (
            SELECT *, RANK() OVER(ORDER BY AGE DESC) AS RANK FROM TEMP WHERE MEDAL = 'Gold'
)
SELECT * FROM RANKING WHERE RANK = '1'

--- Find the Ratio of male and female athletes participated in all olympic games

SELECT * FROM OLYMPICS_HISTORY

 with t1 as
        	(select sex, count(1) as cnt
        	from olympics_history
        	group by sex),
        t2 as
        	(select *, row_number() over(order by cnt) as rn
        	 from t1),
        min_cnt as
        	(select cnt from t2	where rn = 1),
        max_cnt as
        	(select cnt from t2	where rn = 2)
    select concat('1 : ', round(max_cnt.cnt::decimal/min_cnt.cnt, 2)) as ratio
    from min_cnt, max_cnt
    
---- Fetch the top 5 athletes who have won the most gold medals.
WITH T1 AS
(
SELECT NAME, COUNT(MEDAL) AS TOTAL_MEDAL FROM OLYMPICS_HISTORY WHERE MEDAL = 'Gold' 
GROUP BY NAME ORDER BY TOTAL_MEDAL DESC),
T2 AS 
(
SELECT *, DENSE_RANK() OVER(ORDER BY TOTAL_MEDAL DESC) AS RNK
FROM T1)
SELECT * FROM T2 WHERE RNK <=5

---Fetch the top 5 athletes who have won the most medals (gold/silver/bronze).

select* from 
WITH T1 AS
(
SELECT NAME, COUNT(MEDAL) AS TOTAL_MEDAL FROM OLYMPICS_HISTORY WHERE MEDAL IN('Gold', 'Silver', 'Bronze')
GROUP BY NAME ORDER BY TOTAL_MEDAL DESC),
T2 AS (
SELECT *, DENSE_RANK() OVER(ORDER BY TOTAL_MEDAL DESC) AS RNK
 FROM T1)
 SELECT * FROM T2 WHERE RNK <= 5



---Fetch the top 5 most successful countries in olympics. Success is defined by no of medals won?

WITH T1 AS (
SELECT ONR.REGION, COUNT(MEDAL) AS TOTAL_MEDALS FROM OLYMPICS_HISTORY AS O JOIN OLYMPICS_NOC_REGION AS ONR ON O.NOC = ONR.NOC
  WHERE MEDAL <> 'NA'
  GROUP BY ONR.REGION  
ORDER BY TOTAL_MEDALS DESC),
T2 AS(
SELECT *, DENSE_RANK() OVER(ORDER BY TOTAL_MEDALS DESC) AS RNK
  FROM T1
)
SELECT * FROM T2 WHERE RNK<=5

-----List down total gold, silver and bronze medals won by each country

SELECT ONR.REGION AS COUNTRY, MEDAL, COUNT(1) AS TOTAL_MEDALS  FROM OLYMPICS_HISTORY AS O JOIN OLYMPICS_NOC_REGION AS ONR ON ONR.NOC = O.NOC
WHERE MEDAL <> 'NA' GROUP BY ONR.REGION, MEDAL 
PIVOT(SUM(MEDAL) FOR
     MEDAL IN('GOLD', 'SILVER' ,'BRONZE')) AS P
     ORDER BY ONR.REGION 
